name: ZETCH Build

env:
  API_SERVER_PROJECT: api_server

on:
  push:

jobs:

  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - uses: axel-op/googlejavaformat-action@v3
        with:
          commit-message: "style: formatted by GoogleJavaFormat ðŸ¤–"
          args: "--skip-sorting-imports --replace"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build with Maven
        working-directory: ./${{ env.API_SERVER_PROJECT }}
        run: ./mvnw clean install
      - name: API Server Unit Test
        working-directory: ./${{ env.API_SERVER_PROJECT }}
        run: ./mvnw test -Punit-tests
      - name: API Server Integration Test
        working-directory: ./${{ env.API_SERVER_PROJECT }}
        run: ./mvnw test -Pintegration-tests

  sonar-lint:
    name: SonarLint Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache SonarCloud packages
        uses: actions//cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: ./${{ env.API_SERVER_PROJECT }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=astrohsy_ZETCH -Dsonar.java.checkstyle.reportPaths=checkstyle-checker-results.xml
